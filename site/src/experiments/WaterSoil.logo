;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;; Water Soil ;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;

to run-once-soil
    ;initalize variables
    init

    ;set options for packets
    set-packet-count 3
    set-packet-save true
    clear-data

    ;set up plots
    init-plot-soil

    loop [
        ;stop after 15 minutes
        if ((now - :startTime) > (15 * 60)) [
            stop
        ]
        dp4on
        receive-packet
        wait 10
        dp4off
        make "time-list se (:time-list) (now - :startTime) 
        process-soil-packet :_last-packet
        wait 150   ;waits for 15 seconds
    ]

end

to run-forever-soil
    ;initalize variables
    init

    ;set options for packets
    set-packet-count 3
    set-packet-save true
    clear-data

    ;set up plots
    init-plot-soil

    loop [
        ;stop after 24 hours
        if ((now - :startTime) > (60 * 60 * 24)) [
            stop
        ]
        dp4on
        receive-packet
        wait 10
        dp4off

        ;time-list in hours with two decimal places
        make "time-list se (:time-list) (round ((now - :startTime)  * (100 / 3600 )) / 100)
        process-soil-packet :_last-packet
        wait 3000   ;waits for 5 minutes
    ]

end
 
to run-once-evap 
    ;initalize variables
    init

    ;set options for packets
    set-packet-count 2
    set-packet-save true
    clear-data

    ;setup plots
    init-plot-evap

	loop [ 
        ;run this for 20 minutes, and then stop.  
		if ((now - :startTime) > ( 60 * 20 )) [ stop ] 
		receive-packet
		process-evap-packet :_last-packet
        make "time-list se (:time-list) (round ((now - :startTime)  * (100 / 3600 )) / 100)
        wait 100	;wait for 10 seconds
	]
end

to run-forever-evap 
    ;initalize variables
    init

    ;set options for packets
    set-packet-count 2
    set-packet-save true
    clear-data

    ;setup plots
    init-plot-evap

	loop [ 
        ;run until manually stopped
		receive-packet
		process-evap-packet :_last-packet
        make "time-list se (:time-list) (round ((now - :startTime)  * (100 / 3600 )) / 100)
        wait 6000	;wait for 10 minutes
	]
end

to init
    print 'Starting Project'
    make "startTime now

    ;initiatlize variables

    ;lists for collected data and time
    make "time-list []
    make "temp0-data []
    make "temp1-data []
    make "moisture-data []

    ;calibration numbers for moisture sensor and two temp sensors
    make "moisture-cal [870 100 750 50]
    make "temp0-cal [116 0 161 26]
    make "temp1-cal [116 0 161 26]

    ;lists of calibrated data for plotting
    make "temp0-calibrated []
    make "temp1-calibrated []
    make "moisture-calibrated []

    ;normalized moisture data list (requires a correction after calibration)
    make "divided-list []

end

;handles a packet after it has been received

to process-soil-packet :packet
    make "moisture-data se (:moisture-data) (nth 3 :packet)
    make "temp1-data se (:temp1-data) (nth 4 :packet)

    calibrate-list "moisture-calibrated :moisture-data :moisture-cal 
    calibrate-list "temp1-calibrated :temp1-data :temp1-cal 

    make "temp1-value (nth 4 :packet)
    make "moisture-value (nth 3 :packet)
    make "divided-list se :divided-list (:moisture-value * 10) / :temp1-value
    print :time-list
    print :moisture-calibrated
    print :moisture-data

end

to process-evap-packet :packet
    ;add readings and time to relevant lists
    make "temp0-data se (:temp0-data) (nth 3 :packet)
    make "temp1-data se (:temp1-data) (nth 4 :packet)

    calibrate-list "temp0-calibrated :temp0-list :temp-cal
    calibrate-list "temp1-calibrated :temp1-list :temp1-cal 
    calibrate-list "hour-list :time-list :hour_cal
end

to init-plot-soil
    top-plot
    plot-title 'Soil Moisture'
    x-data "time-list
    y-data "moisture-calibrated
    x-label 'Time'
    show-plot

    bottom-plot
    plot-title 'Temp'
    x-data "time-list
    y-data "temp1-calibrated
    x-label 'Time'
    show-plot

end

to init-plot-evap
    top-plot
    plot-title 'Leashed Temp Sensor'
    x-data "time-list
    y-data "temp0-calibrated
    x-label 'Time'
    limits-y 5 30
    show-plot

    bottom-plot
    plot-title 'Temp Sensor on Board'
    x-data "time-list
    y-data "temp1-calibrated
    x-label 'Time'
    limits-y 5 30
    show-plot
end
